# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # This workflow will run on every push on the main branch
  push:
    branches: [ "main" , "develop"]
  pull_request:
    types: [opened, synchronize, reopened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Check Out Repo 
        uses: actions/checkout@v2
        
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: syusuf/demo-app
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#         - name: Login to Docker Hub
#           uses: docker/login-action@v1
#           with:
#             username: ${{ secrets.DOCKER_HUB_USERNAME }}
#             password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           context: ./
#           file: ./Dockerfile
#           push: true
#           tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest

#       - name: Image digest
#         run: echo ${{ steps.docker_build.outputs.digest }}
